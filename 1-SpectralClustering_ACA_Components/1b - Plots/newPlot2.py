import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

# Data based on provided image
data = {
    "Dataset": ["CBF"] * 20 + ["Coffee"] * 20 + ["Fungi"] * 20 + ["GunPointOldVersusYoung"] * 20 + ["HouseTwenty"] * 20,
    "kmax": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200] * 5,
    "Average Score Recon": [0.852740601, 0.885512526, 0.881081752, 0.888845885, 0.886955804, 0.886535155, 0.89000436, 0.901020387, 0.898322567, 0.894771294, 0.893319367, 0.893341617, 0.896493543, 0.895989423, 0.895645525, 0.889467012, 0.893823393, 0.890481679, 0.894806352, 0.894154133,
                          0.793515548, 0.812903961, 0.803078993, 0.824936726, 0.830909532, 0.811431885, 0.821906851, 0.786723565, 0.810608987, 0.803167617, 0.804547155, 0.800872433, 0.81290499, 0.789574569, 0.777720884, 0.793431884, 0.798756122, 0.815200173, 0.802429204, 0.786723565,
                          0.331179485, 0.741825521, 0.727808063, 0.723862886, 0.719491502, 0.710445036, 0.708810325, 0.701414374, 0.697936345, 0.689458686, 0.701771251, 0.70827427, 0.697830377, 0.696928539, 0.691762008, 0.696087373, 0.688827703, 0.701256943, 0.682520799, 0.698611028,
                          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                          0.497290929, 0.559087657, 0.60145002, 0.603892319, 0.609804167, 0.618392285, 0.621725124, 0.623720405, 0.626374124, 0.621682055, 0.627690043, 0.625683733, 0.622339883, 0.630365124, 0.633708974, 0.635715284, 0.635715284, 0.635715284, 0.635715284, 0.635715284],
    "Average Score": [0.853024492, 0.88531613, 0.881185704, 0.88875467, 0.886460108, 0.886054562, 0.889720101, 0.901396806, 0.898122758, 0.894573637, 0.893235958, 0.892053189, 0.896389604, 0.8956021, 0.895135559, 0.889674309, 0.893543633, 0.891276674, 0.894910981, 0.894446309,
                     0.793515548, 0.812431676, 0.803167617, 0.831377967, 0.806107646, 0.80840365, 0.787457438, 0.808313803, 0.81290499, 0.787457438, 0.79269265, 0.794253961, 0.812260144, 0.815200173, 0.824935906, 0.793990515, 0.797194811, 0.803901489, 0.810609807, 0.818139382,
                     0.582854716, 0.760491139, 0.737031116, 0.727160524, 0.742260652, 0.750012072, 0.757704902, 0.758975366, 0.762279809, 0.764788316, 0.769322024, 0.762031091, 0.761938176, 0.763309176, 0.757584814, 0.750604738, 0.756925813, 0.761218517, 0.753529769, 0.752162482,
                     0.616228971, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                     0.48416343, 0.557283508, 0.601449911, 0.603871272, 0.609135431, 0.61772355, 0.621746248, 0.623709856, 0.62436801, 0.622350727, 0.626352503, 0.624346193, 0.623008653, 0.630365124, 0.633708974, 0.635715284, 0.635715284, 0.635715284, 0.635715284, 0.635715284]
}

# Creating a DataFrame
df = pd.DataFrame(data)

# Filter the data for CBF dataset only
df_cbf = df[df["Dataset"] == "CBF"]

# Filter the data for diagonal pivoting with reconstruction and my method
df_recon_cbf = df_cbf[["kmax", "Average Score Recon"]].copy()
df_recon_cbf["Method"] = "Diagonal Pivoting with Reconstruction"
df_my_method_cbf = df_cbf[["kmax", "Average Score"]].copy()
df_my_method_cbf["Method"] = "My Method"

# Concatenate the dataframes
df_recon_cbf = df_recon_cbf.rename(columns={"Average Score Recon": "Average Score"})
df_plot_cbf = pd.concat([df_recon_cbf, df_my_method_cbf])

# Plotting average ARI score in function of kmax for both methods for CBF dataset
plt.figure(figsize=(16, 9))
sns.lineplot(data=df_plot_cbf, x="kmax", y="Average Score", hue="Method", marker="o")
plt.xlabel('kmax', fontsize=14)
plt.ylabel('Gemiddelde ARI Score', fontsize=14)
plt.title('Gemiddelde ARI Score in functie van kmax voor verschillende methoden (CBF dataset)', fontsize=16)
plt.legend(title='Method', fontsize=12)
plt.tight_layout()
plt.show()
